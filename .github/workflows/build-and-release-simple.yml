name: Build and Release Inferno Console

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    
    # ‚úÖ FIX: Permessi per il token GitHub
    permissions:
      contents: write
      packages: write
      id-token: write
    
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        # macOS commentato - da rifare in seguito
        # os: [windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Build Electron app (Windows)
      if: matrix.os == 'windows-latest'
      run: npm run dist:win:portable
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Generate latest.yml for Windows
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        Write-Host "Generating latest.yml for Windows..."
        Set-Location dist-electron
        
        # Trova il file .exe generato
        $EXE_FILE = Get-ChildItem -Name "*.exe" | Select-Object -First 1
        $EXE_SIZE = (Get-Item $EXE_FILE).Length
        $EXE_SHA512 = (Get-FileHash -Path $EXE_FILE -Algorithm SHA512).Hash.ToLower()
        
        # Crea latest.yml usando PowerShell
        $latestYml = @"
        version: ${{ github.ref_name }}
        files:
          - url: $EXE_FILE
            sha512: $EXE_SHA512
            size: $EXE_SIZE
        path: $EXE_FILE
        sha512: $EXE_SHA512
        releaseDate: '$(Get-Date -Format "yyyy-MM-ddTHH:mm:ss.fffZ")'
        "@
        
        $latestYml | Out-File -FilePath "latest.yml" -Encoding UTF8
        
        Write-Host "Generated latest.yml:"
        Get-Content latest.yml

    - name: Create Desktop Shortcut (Windows)
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        Write-Host "Creating desktop shortcut for Windows..."
        Set-Location dist-electron
        
        # Trova il file .exe generato
        $EXE_FILE = Get-ChildItem -Name "*.exe" | Select-Object -First 1
        $EXE_PATH = (Get-Item $EXE_FILE).FullName
        
        # Crea script PowerShell per creare collegamento
        $shortcutScript = @"
        `$WshShell = New-Object -comObject WScript.Shell
        `$DesktopPath = [Environment]::GetFolderPath("Desktop")
        `$ShortcutPath = Join-Path `$DesktopPath "Inferno Console.lnk"
        `$Shortcut = `$WshShell.CreateShortcut(`$ShortcutPath)
        `$Shortcut.TargetPath = "$EXE_PATH"
        `$Shortcut.WorkingDirectory = (Split-Path "$EXE_PATH")
        `$Shortcut.Description = "Inferno Console - Professional DJ Console"
        `$Shortcut.Save()
        Write-Host "Desktop shortcut created: `$ShortcutPath"
        "@
        
        $shortcutScript | Out-File -FilePath "create_shortcut.ps1" -Encoding UTF8
        Write-Host "Shortcut script created, ready for user to run"

    # macOS build commentato - da rifare in seguito
    # - name: Build Electron app (macOS)
    #   if: matrix.os == 'macos-latest'
    #   run: npm run dist
    #   env:
    #     CSC_IDENTITY_AUTO_DISCOVERY: false
    #     GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Create Release (Windows)
      if: matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Inferno Console ${{ github.ref_name }}
        body: |
          ## üéµ Inferno Console ${{ github.ref_name }}
          
          ### ‚ú® Nuove Funzionalit√†
          - Sistema di streaming continuo migliorato
          - Fix auto-reconnessione dopo disconnessione manuale
          - Nickname DJ personalizzabile per Icecast
          - Interfaccia utente ottimizzata
          
          ### üêõ Bug Fix
          - Risolto problema di auto-reconnessione indesiderata
          - Migliorato controllo deck audio durante disconnessione
          - Fix logging per debug del sistema di retry
          
          ### üì¶ Download
          **Windows**: Installa il file `.exe` per Windows 10/11
          
          ### üöÄ Installazione
          1. Scarica il file `.exe` per Windows
          2. Esegui l'installer
          3. Avvia Inferno Console e goditi la tua sessione DJ!
          
          ### üìù Collegamento Desktop
          - Un collegamento "Inferno Console" sar√† creato sul desktop
          - Puoi anche lanciare l'app dal menu Start
          
          ### üìù Note
          - Versione sviluppata da Alessandro(NeverAgain)
          - Licenza MIT
          - Supporto completo per streaming Icecast
        files: |
          dist-electron/*.exe
          dist-electron/latest.yml
          dist-electron/create_shortcut.ps1
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      continue-on-error: true

    # macOS release commentato - da rifare in seguito
    # - name: Create Release (macOS)
    #   if: matrix.os == 'macos-latest' && startsWith(github.ref, 'refs/tags/')
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     tag_name: ${{ github.ref_name }}
    #     name: Inferno Console ${{ github.ref_name }}
    #     body: |
    #       ## üéµ Inferno Console ${{ github.ref_name }}
    #       
    #       ### ‚ú® Nuove Funzionalit√†
    #       - Sistema di streaming continuo migliorato
    #       - Fix auto-reconnessione dopo disconnessione manuale
    #       - Nickname DJ personalizzabile per Icecast
    #       - Interfaccia utente ottimizzata
    #       
    #       ### üêõ Bug Fix
    #       - Risolto problema di auto-reconnessione indesiderata
    #       - Migliorato controllo deck audio durante disconnessione
    #       - Fix logging per debug del sistema di retry
    #       
    #       ### üì¶ Download
    #       Scegli la versione per il tuo sistema operativo:
    #       
    #       **Windows**: Installa il file `.exe` per Windows 10/11
    #       **macOS**: Installa il file `.dmg` per macOS 10.15+
    #       
    #       ### üöÄ Installazione
    #       1. Scarica il file appropriato per il tuo sistema
    #       2. Esegui l'installer (Windows/macOS)
    #       3. Avvia Inferno Console e goditi la tua sessione DJ!
    #       
    #       ### üìù Note
    #       - Versione sviluppata da Alessandro(NeverAgain)
    #       - Licenza MIT
    #       - Supporto completo per streaming Icecast
    #     files: |
    #       dist-electron/*.dmg
    #       dist-electron/*.zip
    #     draft: false
    #     prerelease: false
    #     generate_release_notes: true
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    #   continue-on-error: true

    - name: Upload Release Assets Manually
      if: failure()
      run: |
        echo "‚ö†Ô∏è Release automatico fallito, ma il build √® stato completato!"
        echo "üì¶ I file sono disponibili nella directory dist/"
        echo "üéØ Puoi creare manualmente il release su GitHub:"
        echo "   1. Vai su https://github.com/Alexand83/InfernoConsole/releases"
        echo "   2. Clicca 'Create a new release'"
        echo "   3. Seleziona il tag ${{ github.ref_name }}"
        echo "   4. Carica i file dalla directory dist/"
        echo "   5. Pubblica il release"
