name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build Electron app (Windows)
      if: matrix.os == 'windows-latest'
      run: npm run dist:win:portable
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Verify Portable Build (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        echo "Checking for portable executable..."
        if (Test-Path "dist-electron\Inferno-Console-win.exe") {
          echo "‚úÖ Portable executable found"
          Get-Item "dist-electron\Inferno-Console-win.exe" | Select-Object Name, Length
        } else {
          echo "‚ùå Portable executable not found"
          Get-ChildItem "dist-electron" | Select-Object Name, Length
        }

    - name: Build Custom Installer (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        echo "Building custom installer and uninstaller..."
        cd installer
        npm install
        echo "Building installer..."
        node build-installer.js
        echo "Building uninstaller..."
        node build-uninstaller.js
        echo "Build completed, checking files..."
        Get-ChildItem ../dist-electron/ | Select-Object Name, Length
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Verify All Files Created (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        echo "Checking all release files..."
        $requiredFiles = @(
          "..\dist-electron\Inferno-Console-Installer.exe",
          "..\dist-electron\Inferno-Console-Uninstaller.exe", 
          "..\dist-electron\Inferno-Console-win.exe",
          "..\dist-electron\latest.yml"
        )
        
        foreach ($file in $requiredFiles) {
          if (Test-Path $file) {
            $size = (Get-Item $file).Length
            echo "‚úÖ $file - $([math]::Round($size/1MB, 2)) MB"
          } else {
            echo "‚ùå $file - MISSING"
          }
        }

        # Hard fail if the installer is suspiciously small (< 10MB)
        if (Test-Path "..\dist-electron\Inferno-Console-Installer.exe") {
          $installerSize = (Get-Item "..\dist-electron\Inferno-Console-Installer.exe").Length
          if ($installerSize -lt 10485760) {
            echo "‚ùå Installer too small: $([math]::Round($installerSize/1MB, 2)) MB"
            exit 1
          }
        } else {
          echo "‚ùå Installer missing"
          exit 1
        }

    - name: Create Release (Windows)
      if: matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Inferno Console ${{ github.ref_name }}
        body: |
          ## üéµ Inferno Console ${{ github.ref_name }}
          
          ### ‚ú® Nuove Funzionalit√†
          - **Installer GUI professionale** con tema scuro NSIS-style
          - **Navigazione sequenziale** - solo bottoni Avanti/Indietro
          - **Finestra ottimizzata** (1300x1000) per log di installazione
          - **Log puliti** senza bottoni debug inutili
          - **Blocco navigazione** durante installazione
          - **Selezione directory** personalizzabile
          - **Shortcut automatici** Desktop e Start Menu
          - **Uninstaller dedicato** per rimozione completa
          - **Integrazione electron-updater** per percorsi custom
          - **Risoluzione dinamica URL** per download da GitHub Releases
          
          ### üêõ Bug Fix
          - Fix navigazione sidebar che permetteva salti non autorizzati
          - Fix bottone "Avanti" che appariva nella pagina installazione
          - Fix log che coprivano la finestra durante installazione
          - Fix errori PowerShell per creazione shortcut
          - Fix processi in uso durante avvio applicazione
          
          ### üì¶ Download
          **Windows**: Scarica `Inferno-Console-Installer.exe` - Installer GUI professionale
          
          ### üöÄ Installazione
          1. Scarica `Inferno-Console-Installer.exe`
          2. Esegui l'installer (interfaccia moderna)
          3. Accetta la licenza
          4. Scegli la directory di installazione
          5. Clicca "Inizia Installazione"
          6. L'app si avvia automaticamente!
          
          ### ‚ú® Caratteristiche Installer
          - **Singolo file .exe** - tutto incluso (~77MB)
          - **Interfaccia moderna** - tema scuro professionale
          - **Navigazione intuitiva** - flusso guidato step-by-step
          - **Selezione directory** - installa dove vuoi
          - **Shortcut automatici** - Desktop e Start Menu
          - **Uninstaller dedicato** - rimozione completa
          - **Compatibile con electron-updater** - aggiornamenti automatici
          - **Log dettagliati** - monitoraggio installazione
          
          ### üìù Note
          - Versione sviluppata da Alessandro(NeverAgain)
          - Licenza MIT
          - Supporto completo per streaming Icecast
          - Aggiornamenti automatici rispettano directory personalizzata
        files: |
          dist-electron/Inferno-Console-Installer.exe
          dist-electron/Inferno-Console-Uninstaller.exe
          dist-electron/Inferno-Console-win.exe
          dist-electron/latest.yml
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      continue-on-error: true